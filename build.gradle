buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
        classpath 'mysql:mysql-connector-java:5.1.34'
        classpath 'org.flywaydb:flyway-gradle-plugin:3.1'
    }

}

apply plugin: 'flyway'
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'


task wrapper(type: Wrapper) {
    gradleVersion = '2.13'
}

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile 'io.vertx:vertx-web:3.2.1'
    compile 'com.knowably:twitter4j-core:4.0.5'
    compile 'mysql:mysql-connector-java:6.0.2'
}

//Database migration
    task createDatabase << {
        flyway {
            url = 'jdbc:mysql://localhost'
            user = 'root'
            password = 'xxxx'
            schemas = ['twitterx']
            baselineOnMigrate = true
            baselineVersion = 1
            //baselineDescription = "Create schema"
        }
        flywayMigrate.execute();
    }

    task createTables << {
        flyway {
            url = 'jdbc:mysql://localhost/twitterx'
            user = 'root'
            password = 'xxxx'
            locations = [
                    "filesystem:${projectDir}/database/migrations"
            ]
            baselineOnMigrate = true
            baselineVersion = 1.1
            baselineDescription = "Create Tables"
        }
        flywayMigrate.execute();
    }

//Run and compile
    group 'org.frobs'
    version '0.0.1'
    sourceCompatibility = 1.8
    mainClassName = 'io.vertx.core.Launcher'

    def mainVerticleName = 'org.frobs.communityeverywhere.App'
    def watchForChange = 'src/**/*.java'
    def doOnChange = './gradlew classes'

    shadowJar {
        archiveName = "communityEverywhere-${version}.${extension}"
        manifest {
            attributes 'Main-Verticle': mainVerticleName
        }
        mergeServiceFiles {
            include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
            include 'src/main/resources'
        }
    }

    run {
        args = ['run', mainVerticleName, "--redeploy=$watchForChange", "--launcher-class=$mainClassName", "--on-redeploy=$doOnChange"]
    }